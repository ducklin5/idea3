// zoomkat 3-28-14 serial servo incremental test code
// using serial monitor type a character (s to increase or a 
// to decrease) and enter to change servo position 
// (two hands required, one for letter entry and one for enter key)
// use strings like 90x or 1500x for new servo position 
// for IDE 1.0.5 and later
// Powering a servo from the arduino usually *DOES NOT WORK*.
#define ARDUINO_ARCH_AVR

#include <Arduino.h>
#include "Servo.h"
#include "Servo.cpp"

String readString;
Servo myservo;
int pos= 90; //~neutral value for continous rotation servo
int pin = 12;
int min = 530;
int max = 2410;
//int pos=90;

void setup()
{
	init();
	myservo.attach(pin, min, max); //servo control pin, and range if desired
	Serial.begin(9600);
	Serial.println("serial servo incremental test code");
	Serial.println("type a character (a to decrease or d to increase)");
	Serial.println("and enter to change servo position");
	Serial.println("use strings like s90 or s1500 for new servo position");
	Serial.println("use strings like sz400 to set servo min pulse width");
	Serial.println("use strings like sx2600 to set servo max pulse width");
	Serial.println();
}

int main(){
	setup();
	while(true){
		bool set = false;
		bool smin = false;
		bool smax = false;
		bool wait = false;
		while (Serial.available() or wait) {
			while(wait and !Serial.available()){ delay(10); }
			char c = Serial.read();  //gets one byte from serial buffer
			Serial.print(c);
			if (c == 's'){
				wait = true; set = true;
			} else if ( set ){
				switch (c){
					case 'x':
						smax = 1; smin = 0; break;
					case 'z':
						smin = 1; smax = 0; break;
					case '\r':
					case '\n':
						wait = 0; break;
					default:
						readString += c; break;
				}
			}else{
				readString += c;
			}
		}
		if (readString.length() >0) {
			Serial.println();
			if(smax or smin) {
				myservo.detach();
				if(smin){
					min = readString.toInt();
				} else { 
					max = readString.toInt();
				}
				myservo.attach(pin, min, max);
			} else if (set) {
				pos = readString.toInt();
			}
			if(readString =="a"){
				(pos=pos-1); //use larger numbers for larger increments
				if(pos<0) (pos=0); //prevent negative number
			}
			if (readString =="d"){
				(pos=pos+1);
			}

			if(pos >= 400) //determine servo write method
			{
				Serial.println(pos);
				myservo.writeMicroseconds(pos);
			}
			else
			{   
				Serial.println(pos);
				myservo.write(pos); 
			}
		}
		readString=""; //empty for next input
	}
}

